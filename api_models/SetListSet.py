# coding: utf-8

import pprint
import re  # noqa: F401

import six


class SetListSet(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'includeUnderscorespares': 'Boolean',
        'listUnderscoreid': 'Integer',
        'quantity': 'Integer',
        'set': 'Set',
        'setUnderscorenum': 'String'
    }

    attribute_map = {
        'includeUnderscorespares': 'include_spares',
        'listUnderscoreid': 'list_id',
        'quantity': 'quantity',
        'set': 'set',
        'setUnderscorenum': 'set_num'
    }

    def __init__(self, includeUnderscorespares=null, listUnderscoreid=null, quantity=null, set=null, setUnderscorenum=null):  # noqa: E501
        """SetListSet - a model defined in OpenAPI"""  # noqa: E501

        self._includeUnderscorespares = None
        self._listUnderscoreid = None
        self._quantity = None
        self._set = None
        self._setUnderscorenum = None
        self.discriminator = None

        if includeUnderscorespares is not None:
            self.includeUnderscorespares = includeUnderscorespares
        if listUnderscoreid is not None:
            self.listUnderscoreid = listUnderscoreid
        if quantity is not None:
            self.quantity = quantity
        if set is not None:
            self.set = set
        if setUnderscorenum is not None:
            self.setUnderscorenum = setUnderscorenum

    @property
    def includeUnderscorespares(self):
        """Gets the includeUnderscorespares of this SetListSet.  # noqa: E501


        :return: The includeUnderscorespares of this SetListSet.  # noqa: E501
        :rtype: Boolean
        """
        return self._includeUnderscorespares

    @includeUnderscorespares.setter
    def includeUnderscorespares(self, includeUnderscorespares):
        """Sets the includeUnderscorespares of this SetListSet.


        :param includeUnderscorespares: The includeUnderscorespares of this SetListSet.  # noqa: E501
        :type: Boolean
        """

        self._includeUnderscorespares = includeUnderscorespares

    @property
    def listUnderscoreid(self):
        """Gets the listUnderscoreid of this SetListSet.  # noqa: E501


        :return: The listUnderscoreid of this SetListSet.  # noqa: E501
        :rtype: Integer
        """
        return self._listUnderscoreid

    @listUnderscoreid.setter
    def listUnderscoreid(self, listUnderscoreid):
        """Sets the listUnderscoreid of this SetListSet.


        :param listUnderscoreid: The listUnderscoreid of this SetListSet.  # noqa: E501
        :type: Integer
        """

        self._listUnderscoreid = listUnderscoreid

    @property
    def quantity(self):
        """Gets the quantity of this SetListSet.  # noqa: E501


        :return: The quantity of this SetListSet.  # noqa: E501
        :rtype: Integer
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this SetListSet.


        :param quantity: The quantity of this SetListSet.  # noqa: E501
        :type: Integer
        """

        self._quantity = quantity

    @property
    def set(self):
        """Gets the set of this SetListSet.  # noqa: E501


        :return: The set of this SetListSet.  # noqa: E501
        :rtype: Set
        """
        return self._set

    @set.setter
    def set(self, set):
        """Sets the set of this SetListSet.


        :param set: The set of this SetListSet.  # noqa: E501
        :type: Set
        """

        self._set = set

    @property
    def setUnderscorenum(self):
        """Gets the setUnderscorenum of this SetListSet.  # noqa: E501


        :return: The setUnderscorenum of this SetListSet.  # noqa: E501
        :rtype: String
        """
        return self._setUnderscorenum

    @setUnderscorenum.setter
    def setUnderscorenum(self, setUnderscorenum):
        """Sets the setUnderscorenum of this SetListSet.


        :param setUnderscorenum: The setUnderscorenum of this SetListSet.  # noqa: E501
        :type: String
        """

        self._setUnderscorenum = setUnderscorenum

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SetListSet):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
